//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
 * Copyright (c) 2023, NVIDIA CORPORATION.  All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatableDevice) DeepCopyInto(out *AllocatableDevice) {
	*out = *in
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(AllocatableGpu)
		**out = **in
	}
	if in.Mig != nil {
		in, out := &in.Mig, &out.Mig
		*out = new(AllocatableMigDevice)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatableDevice.
func (in *AllocatableDevice) DeepCopy() *AllocatableDevice {
	if in == nil {
		return nil
	}
	out := new(AllocatableDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatableGpu) DeepCopyInto(out *AllocatableGpu) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatableGpu.
func (in *AllocatableGpu) DeepCopy() *AllocatableGpu {
	if in == nil {
		return nil
	}
	out := new(AllocatableGpu)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatableMigDevice) DeepCopyInto(out *AllocatableMigDevice) {
	*out = *in
	if in.Placements != nil {
		in, out := &in.Placements, &out.Placements
		*out = make([]MigDevicePlacement, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatableMigDevice.
func (in *AllocatableMigDevice) DeepCopy() *AllocatableMigDevice {
	if in == nil {
		return nil
	}
	out := new(AllocatableMigDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatedDevices) DeepCopyInto(out *AllocatedDevices) {
	*out = *in
	if in.ClaimInfo != nil {
		in, out := &in.ClaimInfo, &out.ClaimInfo
		*out = new(ClaimInfo)
		**out = **in
	}
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(AllocatedGpus)
		(*in).DeepCopyInto(*out)
	}
	if in.Mig != nil {
		in, out := &in.Mig, &out.Mig
		*out = new(AllocatedMigDevices)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatedDevices.
func (in *AllocatedDevices) DeepCopy() *AllocatedDevices {
	if in == nil {
		return nil
	}
	out := new(AllocatedDevices)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatedGpu) DeepCopyInto(out *AllocatedGpu) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatedGpu.
func (in *AllocatedGpu) DeepCopy() *AllocatedGpu {
	if in == nil {
		return nil
	}
	out := new(AllocatedGpu)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatedGpus) DeepCopyInto(out *AllocatedGpus) {
	*out = *in
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]AllocatedGpu, len(*in))
		copy(*out, *in)
	}
	if in.Sharing != nil {
		in, out := &in.Sharing, &out.Sharing
		*out = new(GpuSharing)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatedGpus.
func (in *AllocatedGpus) DeepCopy() *AllocatedGpus {
	if in == nil {
		return nil
	}
	out := new(AllocatedGpus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatedMigDevice) DeepCopyInto(out *AllocatedMigDevice) {
	*out = *in
	out.Placement = in.Placement
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatedMigDevice.
func (in *AllocatedMigDevice) DeepCopy() *AllocatedMigDevice {
	if in == nil {
		return nil
	}
	out := new(AllocatedMigDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocatedMigDevices) DeepCopyInto(out *AllocatedMigDevices) {
	*out = *in
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]AllocatedMigDevice, len(*in))
		copy(*out, *in)
	}
	if in.Sharing != nil {
		in, out := &in.Sharing, &out.Sharing
		*out = new(MigDeviceSharing)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocatedMigDevices.
func (in *AllocatedMigDevices) DeepCopy() *AllocatedMigDevices {
	if in == nil {
		return nil
	}
	out := new(AllocatedMigDevices)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClaimInfo) DeepCopyInto(out *ClaimInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClaimInfo.
func (in *ClaimInfo) DeepCopy() *ClaimInfo {
	if in == nil {
		return nil
	}
	out := new(ClaimInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GpuSharing) DeepCopyInto(out *GpuSharing) {
	*out = *in
	if in.TimeSlicingConfig != nil {
		in, out := &in.TimeSlicingConfig, &out.TimeSlicingConfig
		*out = new(TimeSlicingConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.MpsConfig != nil {
		in, out := &in.MpsConfig, &out.MpsConfig
		*out = new(MpsConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GpuSharing.
func (in *GpuSharing) DeepCopy() *GpuSharing {
	if in == nil {
		return nil
	}
	out := new(GpuSharing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigDevicePlacement) DeepCopyInto(out *MigDevicePlacement) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigDevicePlacement.
func (in *MigDevicePlacement) DeepCopy() *MigDevicePlacement {
	if in == nil {
		return nil
	}
	out := new(MigDevicePlacement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigDeviceSharing) DeepCopyInto(out *MigDeviceSharing) {
	*out = *in
	if in.MpsConfig != nil {
		in, out := &in.MpsConfig, &out.MpsConfig
		*out = new(MpsConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigDeviceSharing.
func (in *MigDeviceSharing) DeepCopy() *MigDeviceSharing {
	if in == nil {
		return nil
	}
	out := new(MigDeviceSharing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MpsConfig) DeepCopyInto(out *MpsConfig) {
	*out = *in
	if in.MaxConnections != nil {
		in, out := &in.MaxConnections, &out.MaxConnections
		*out = new(int)
		**out = **in
	}
	if in.ActiveThreadPercentage != nil {
		in, out := &in.ActiveThreadPercentage, &out.ActiveThreadPercentage
		*out = new(int)
		**out = **in
	}
	if in.PinnedDeviceMemoryLimit != nil {
		in, out := &in.PinnedDeviceMemoryLimit, &out.PinnedDeviceMemoryLimit
		*out = make(MpsPinnedDeviceMemoryLimit, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MpsConfig.
func (in *MpsConfig) DeepCopy() *MpsConfig {
	if in == nil {
		return nil
	}
	out := new(MpsConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in MpsPinnedDeviceMemoryLimit) DeepCopyInto(out *MpsPinnedDeviceMemoryLimit) {
	{
		in := &in
		*out = make(MpsPinnedDeviceMemoryLimit, len(*in))
		for key, val := range *in {
			(*out)[key] = val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MpsPinnedDeviceMemoryLimit.
func (in MpsPinnedDeviceMemoryLimit) DeepCopy() MpsPinnedDeviceMemoryLimit {
	if in == nil {
		return nil
	}
	out := new(MpsPinnedDeviceMemoryLimit)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAllocationState) DeepCopyInto(out *NodeAllocationState) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAllocationState.
func (in *NodeAllocationState) DeepCopy() *NodeAllocationState {
	if in == nil {
		return nil
	}
	out := new(NodeAllocationState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeAllocationState) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAllocationStateConfig) DeepCopyInto(out *NodeAllocationStateConfig) {
	*out = *in
	if in.Owner != nil {
		in, out := &in.Owner, &out.Owner
		*out = new(v1.OwnerReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAllocationStateConfig.
func (in *NodeAllocationStateConfig) DeepCopy() *NodeAllocationStateConfig {
	if in == nil {
		return nil
	}
	out := new(NodeAllocationStateConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAllocationStateList) DeepCopyInto(out *NodeAllocationStateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NodeAllocationState, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAllocationStateList.
func (in *NodeAllocationStateList) DeepCopy() *NodeAllocationStateList {
	if in == nil {
		return nil
	}
	out := new(NodeAllocationStateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NodeAllocationStateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NodeAllocationStateSpec) DeepCopyInto(out *NodeAllocationStateSpec) {
	*out = *in
	if in.AllocatableDevices != nil {
		in, out := &in.AllocatableDevices, &out.AllocatableDevices
		*out = make([]AllocatableDevice, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AllocatedClaims != nil {
		in, out := &in.AllocatedClaims, &out.AllocatedClaims
		*out = make(map[string]AllocatedDevices, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.PreparedClaims != nil {
		in, out := &in.PreparedClaims, &out.PreparedClaims
		*out = make(map[string]PreparedDevices, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NodeAllocationStateSpec.
func (in *NodeAllocationStateSpec) DeepCopy() *NodeAllocationStateSpec {
	if in == nil {
		return nil
	}
	out := new(NodeAllocationStateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreparedDevices) DeepCopyInto(out *PreparedDevices) {
	*out = *in
	if in.Gpu != nil {
		in, out := &in.Gpu, &out.Gpu
		*out = new(PreparedGpus)
		(*in).DeepCopyInto(*out)
	}
	if in.Mig != nil {
		in, out := &in.Mig, &out.Mig
		*out = new(PreparedMigDevices)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreparedDevices.
func (in *PreparedDevices) DeepCopy() *PreparedDevices {
	if in == nil {
		return nil
	}
	out := new(PreparedDevices)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreparedGpu) DeepCopyInto(out *PreparedGpu) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreparedGpu.
func (in *PreparedGpu) DeepCopy() *PreparedGpu {
	if in == nil {
		return nil
	}
	out := new(PreparedGpu)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreparedGpus) DeepCopyInto(out *PreparedGpus) {
	*out = *in
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]PreparedGpu, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreparedGpus.
func (in *PreparedGpus) DeepCopy() *PreparedGpus {
	if in == nil {
		return nil
	}
	out := new(PreparedGpus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreparedMigDevice) DeepCopyInto(out *PreparedMigDevice) {
	*out = *in
	out.Placement = in.Placement
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreparedMigDevice.
func (in *PreparedMigDevice) DeepCopy() *PreparedMigDevice {
	if in == nil {
		return nil
	}
	out := new(PreparedMigDevice)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreparedMigDevices) DeepCopyInto(out *PreparedMigDevices) {
	*out = *in
	if in.Devices != nil {
		in, out := &in.Devices, &out.Devices
		*out = make([]PreparedMigDevice, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreparedMigDevices.
func (in *PreparedMigDevices) DeepCopy() *PreparedMigDevices {
	if in == nil {
		return nil
	}
	out := new(PreparedMigDevices)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeSlicingConfig) DeepCopyInto(out *TimeSlicingConfig) {
	*out = *in
	if in.TimeSlice != nil {
		in, out := &in.TimeSlice, &out.TimeSlice
		*out = new(TimeSliceDuration)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeSlicingConfig.
func (in *TimeSlicingConfig) DeepCopy() *TimeSlicingConfig {
	if in == nil {
		return nil
	}
	out := new(TimeSlicingConfig)
	in.DeepCopyInto(out)
	return out
}
